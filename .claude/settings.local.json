{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git tag:*)",
      "Bash(node:*)",
      "Bash(npm run dev:*)",
      "Bash(npm install:*)",
      "Bash(set DATABASE_URL=postgresql://mock:mock@localhost:5432/mock)",
      "Bash(npm test:*)",
      "Bash(npx tsc:*)",
      "Bash(awk:*)",
      "Bash(cp:*)",
      "Bash(sed:*)",
      "Bash(rm:*)",
      "Bash(grep:*)",
      "WebFetch(domain:github.com)",
      "Bash(git clone:*)",
      "Bash(tasklist:*)",
      "Bash(taskkill:*)",
      "Bash(powershell:*)",
      "Bash(pkill:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run start:*)",
      "Bash(curl:*)",
      "Bash(mv:*)",
      "Bash(npm run lint)",
      "Bash(npm audit:*)",
      "Bash(wc:*)",
      "Bash(git rm:*)",
      "Bash(npm run build:*)",
      "Bash(git checkout:*)",
      "Bash(time npx tsc -p tsconfig.fast.json --noEmit)",
      "Bash(pnpm add:*)",
      "Bash(docker compose:*)",
      "Bash(DATABASE_URL=\"postgresql://postgres:postgres@localhost:5432/povc_fund\" npm run db:push)",
      "Bash(wsl:*)",
      "Bash(npm run:*)",
      "sequential thinking",
      "filesystems",
      "Cucumber Studio",
      "Socket",
      "Socket",
      "Playwright",
      "Bash(npm ci:*)",
      "Bash(gh pr edit:*)",
      "Bash(gh label:*)",
      "Bash(gh pr view:*)",
      "Bash(npm uninstall:*)",
      "Bash(timeout:*)",
      "Bash(npm:*)",
      "Bash(npm i:*)",
      "Bash(tsx scripts/fix-critical-issues.ts:*)",
      "Bash(npx tsx:*)",
      "Bash(REDIS_URL=memory:// npm run circuit-breaker status)",
      "Bash(REDIS_URL=memory:// tsx scripts/circuit-breaker-cli.ts status)",
      "Bash(REDIS_URL=memory:// npx tsx scripts/circuit-breaker-cli.ts status)",
      "Bash(REDIS_URL=memory:// npx tsx scripts/circuit-breaker-cli.ts help)",
      "Bash(REDIS_URL=memory:// npx vitest run tests/integration/dev-memory-mode.test.ts)",
      "Bash(PORT=5001 REDIS_URL=memory:// ENABLE_QUEUES=0 tsx server/bootstrap.ts)",
      "Bash(PORT=5001 REDIS_URL=memory:// ENABLE_QUEUES=0 npx tsx server/bootstrap.ts)",
      "Bash(PORT=5003 REDIS_URL=memory:// ENABLE_QUEUES=0 npx tsx server/bootstrap.ts)",
      "Bash(PORT=5004 REDIS_URL=memory:// ENABLE_QUEUES=0 npx tsx server/bootstrap.ts)",
      "Bash(git apply:*)",
      "Bash(touch:*)",
      "Bash(rg:*)",
      "Bash(git grep:*)",
      "Bash(gh run view:*)",
      "Bash(UNZIP_DIR=/tmp/updog_scaffolds)",
      "Bash(unzip:*)",
      "Bash(echo \"Bundle unpacked successfully to $UNZIP_DIR\")",
      "Bash(cat:*)",
      "Bash(echo:*)",
      "Bash(export UNZIP_DIR=/tmp/updog_scaffolds)",
      "Bash(rsync:*)",
      "Bash(git merge:*)",
      "Bash(git cherry-pick:*)",
      "Bash(gh pr list:*)",
      "Bash(gh issue list:*)",
      "Bash(chmod:*)"
    ],
    "deny": [],
    "additionalDirectories": [
      "C:\\mnt\\c\\dev",
      "C:\\tmp"
    ]
  }
}