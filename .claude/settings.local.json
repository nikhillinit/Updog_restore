{
  "permissions": {
    "allow": [
      "Bash(npm ls:*)",
      "Bash(npm audit:*)",
      "WebSearch",
      "Bash(npm install:*)",
      "Bash(chmod:*)",
      "Bash(npm run check:*)",
      "Bash(curl:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npm run build:*)",
      "Bash(npm test:*)",
      "Bash(gh pr list:*)",
      "Bash(npm run test:integration:*)",
      "Bash(gh issue list:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr checks:*)",
      "Bash(gh workflow run:*)",
      "Bash(cat:*)",
      "Bash(node:*)",
      "Bash(git mv:*)",
      "Bash(find:*)",
      "Bash(git push:*)",
      "Bash(git update-index:*)",
      "Bash(grep:*)",
      "Bash(VERBOSE=1 node scripts/size-first-load.mjs)",
      "Bash(set VERBOSE=1)",
      "Bash(npx tsc:*)",
      "Bash(git grep:*)",
      "Bash(./scripts/test-gates-locally.sh:*)",
      "Bash(npx vercel:*)",
      "Bash(npm uninstall:*)",
      "Bash(bash scripts/test-gates-locally.sh:*)",
      "WebFetch(domain:updog-restore-k309lhcrv-nikhil-bhambis-projects.vercel.app)",
      "Bash(vercel:*)",
      "WebFetch(domain:updog-restore-762ioiwqe-nikhil-bhambis-projects.vercel.app)",
      "Bash(bash:*)",
      "Bash(echo:*)",
      "Bash(rg:*)",
      "Bash(npm ci:*)",
      "Bash(cross-env VITE_USE_PREACT=0 npm run build)",
      "Bash(cross-env VITE_USE_PREACT=0 npm run build:web)",
      "Bash(cross-env VITE_USE_PREACT=1 npm run build:web)",
      "Bash(cmd /c:*)",
      "Bash(npm run preview:web:*)",
      "Bash(npx playwright test:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr edit:*)",
      "Bash(gh run view:*)",
      "Bash(npm run lint:*)",
      "Bash(npm run test:unit:*)",
      "Bash(npx eslint:*)",
      "Bash(gh issue view:*)",
      "Bash(npm run typecheck:*)",
      "Bash(timeout 30 npm run lint)",
      "Bash(npm run dev:*)",
      "WebFetch(domain:github.com)",
      "Bash(start http://localhost:5173/fund-setup)",
      "Bash(npm run test:quick:*)",
      "Bash(start http://localhost:5174/fund-setup)",
      "WebFetch(domain:localhost)",
      "Bash(npm run test:e2e:*)",
      "Bash(npm run test:*)",
      "Bash(start C:devUpdog_restoretest-wizard.html)",
      "Bash(start \"C:\\dev\\Updog_restore\\test-wizard.html\")",
      "Bash(gh issue close:*)",
      "Bash(for i in {1..5})",
      "Bash(do echo \"Run $i:\")",
      "Bash(done)",
      "Bash(for i in {1..3})",
      "Bash(npx vitest run:*)",
      "Bash(gh issue comment:*)",
      "Bash(gh run list:*)",
      "Bash(PERF_SUMMARY_PATH=perf/test-summary.json node scripts/compare-perf.mjs)",
      "Bash(PERF_SUMMARY_PATH=perf/test-fail.json node scripts/compare-perf.mjs)",
      "Bash(git rm:*)",
      "Bash(start C:devUpdog_restoretest-step3.html)",
      "Bash(start \"C:\\dev\\Updog_restore\\test-step3.html\")",
      "Bash(git checkout:*)",
      "Bash(gh pr merge:*)",
      "Bash(gh pr:*)",
      "Bash(git fetch:*)",
      "Bash(git merge:*)",
      "Bash(npm i:*)",
      "Bash(npx playwright install:*)",
      "Bash(npm run preview:*)",
      "Bash(set \"BASE_URL=http://localhost:4174\")",
      "Bash($env:BASE_URL=\"http://localhost:4174\")",
      "Bash(BASE_URL=http://localhost:4174 npx playwright test --project=core tests/e2e/fund-setup.spec.ts)",
      "Bash(test:*)",
      "Bash(timeout:*)",
      "Bash(python:*)",
      "mcp__ide__executeCode",
      "Bash(start http://localhost:5173/)",
      "Bash(netstat:*)",
      "Bash(taskkill:*)",
      "Bash(git log:*)",
      "Bash(npm run:*)",
      "Bash(git restore:*)",
      "Bash(gh api:*)",
      "Bash(npx drizzle-kit up:*)",
      "Bash(npx husky add:*)",
      "Bash(railway --version)",
      "Bash(railway status:*)",
      "Bash(railway login:*)",
      "Bash(railway auth:*)",
      "Bash(railway:*)",
      "Bash(docker:*)",
      "Bash(for i in {1..10})",
      "Bash(do time curl -s http://localhost:5000/health)",
      "Read(//c/Users/nikhi/Downloads/**)",
      "Bash(dir:*)",
      "Bash(unzip:*)",
      "Bash(npx drizzle-kit:*)",
      "Bash(git merge-base:*)",
      "Bash(git diff:*)",
      "WebFetch(domain:app.codacy.com)",
      "WebFetch(domain:vercel.com)",
      "Bash(gh pr:*)",
      "Bash(gh run list:*)",
      "Bash(git pull:*)",
      "Bash(git log:*)",
      "Bash(git tag:*)",
      "Bash(npm run lint)",
      "Bash(npm run test:quick:*)",
      "Bash(npm run build:types:*)",
      "Bash(git checkout:*)",
      "Bash(git rebase:*)",
      "WebFetch(domain:tactyc.app.carta.com)",
      "Bash(cross-env:*)",
      "Bash(./setup.sh)",
      "Bash(python3:*)",
      "Bash(where python3)",
      "Bash(C:UsersnikhiAppDataLocalMicrosoftWindowsAppspython3.exe -m venv venv)",
      "Bash(venvScripts:*)",
      "Bash(pip install:*)",
      "Bash(/c/Users/nikhi/AppData/Local/Microsoft/WindowsApps/python3.exe -m venv venv)",
      "Bash(npx tsx:*)",
      "Bash(cut:*)",
      "Bash(üß† Smart Test Runner Starting...)",
      "Bash(__NEW_LINE__ üìã Phase 1: Smart Test Selection)",
      "Bash(Selected 20 tests for execution)",
      "Bash(__NEW_LINE__ üèÉ Phase 2: Optimized Test Execution)",
      "Bash(Running 20 tests in 4 batches)",
      "Bash(üì¶ Batch 1/4: 5 tests)",
      "Bash(Error: spawn npx ENOENT)",
      "Bash(‚úÖ 0 passed, ‚ùå 5 failed)",
      "Bash(üì¶ Batch 2/4: 5 tests)",
      "Bash(üì¶ Batch 3/4: 5 tests)",
      "Bash(üì¶ Batch 4/4: 5 tests)",
      "Bash(__NEW_LINE__ üîß Phase 3: Automatic Repair)",
      "Bash(tsx scripts/automated-test-repair.ts:*)",
      "mcp__ide__getDiagnostics",
      "WebFetch(domain:www.kauffmanfellows.org)",
      "Bash(npm --version)",
      "Read(//c/Users/nikhi/.claude-mcp-servers/**)",
      "Bash(git stash apply:*)",
      "WebFetch(domain:tactyc.io)",
      "Bash(git reset:*)",
      "Bash(npx depcheck:*)",
      "WebFetch(domain:docs.tactyc.io)",
      "Bash(start http://localhost:5174/investments-table)",
      "Bash(start http://localhost:5174/secondary-market)",
      "Bash(start http://localhost:5175/notion-integration)",
      "Bash(start http://localhost:5175/fund-setup)",
      "Bash(npx license-checker:*)",
      "Bash(wc:*)",
      "Bash(mkdir:*)",
      "Bash(npm outdated:*)",
      "Bash(npm view:*)",
      "Bash(awk:*)",
      "Bash(findstr:*)",
      "Bash(where claude)",
      "Bash(tee:*)",
      "Read(//c/**)",
      "Bash(powershell:*)",
      "Bash(Select-String -Pattern \"(PASS|FAIL|Test Files|Tests  |Duration)\")"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "C:\\mnt\\c\\dev",
      "C:\\tmp",
      "C:\\dev\\updog_components_wt"
    ]
  }
}