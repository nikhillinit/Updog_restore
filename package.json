{
  "name": "rest-express",
  "version": "1.3.2",
  "type": "module",
  "license": "MIT",
  "engines": {
    "node": "20.x",
    "npm": ">=10.9.0"
  },
  "packageManager": "npm@10.9.2",
  "scripts": {
    "dev": "concurrently -k \"npm run dev:client\" \"npm run dev:api\"",
    "dev:parallel": "concurrently -k -n \"CLIENT,API,WORKER-R,WORKER-P,METRICS\" -c \"cyan,green,yellow,magenta,blue\" \"npm run dev:client\" \"npm run dev:api\" \"npm run dev:worker:reserve\" \"npm run dev:worker:pacing\" \"npm run metrics:local\"",
    "dev:turbo": "concurrently -k -n \"CLIENT,API,TYPE,LINT\" -c \"cyan,green,yellow,blue\" \"npm run dev:client\" \"npm run dev:api\" \"npm run check:watch\" \"npm run lint:watch\"",
    "dev:fast": "concurrently -k -n \"TYPE,LINT,TEST\" -c \"cyan,yellow,green\" \"npm run check:fast\" \"npm run lint:affected\" \"npm run test:quick\"",
    "test:parallel": "concurrently -k -n \"UNIT,LINT,TYPE\" \"npm run test:unit\" \"npm run lint\" \"npm run check:fast\"",
    "build:parallel": "concurrently -n \"CLIENT,TYPES\" -c \"cyan,yellow\" \"npm run build:web\" \"npm run build:types\"",
    "build:smart": "node scripts/build-smart.mjs",
    "build:affected": "node scripts/build-smart.mjs",
    "build:fast": "cross-env NODE_ENV=development vite build --mode development",
    "dev:quick": "cross-env NODE_ENV=development REDIS_URL=memory:// ENABLE_QUEUES=0 tsx server/bootstrap.ts",
    "dev:memory": "cross-env REDIS_URL=memory:// ENABLE_QUEUES=0 npm run dev:api",
    "dev:full": "npm run dev:infra && npm run dev",
    "dev:dashboard": "node scripts/dev-dashboard.js start",
    "dev:health": "node scripts/dev-dashboard.js health",
    "dev:fix": "node scripts/dev-dashboard.js fix",
    "fix:typescript": "tsx scripts/automated-error-fixes.ts fix",
    "fix:typescript:help": "tsx scripts/automated-error-fixes.ts help",
    "dev:infra": "docker compose -f docker-compose.dev.yml up -d --wait",
    "dev:client": "npx vite",
    "dev:web:react": "vite --mode react",
    "dev:web:preact": "vite --mode preact",
    "dev:api": "tsx server/bootstrap.ts",
    "dev:worker:reserve": "tsx workers/reserve-worker.ts",
    "dev:worker:pacing": "tsx workers/pacing-worker.ts",
    "build:web": "vite build --mode preact",
    "build:web:react": "vite build --mode react",
    "build:web:preact": "vite build --mode preact",
    "build:web:preact:clean": "rimraf node_modules/.vite dist && cross-env BUILD_WITH_PREACT=1 vite build",
    "build:stats": "cross-env BUILD_WITH_PREACT=1 vite build --mode analyze",
    "verify:opt": "node scripts/verify-optimizations.mjs",
    "build:server": "echo 'Skipping server build for Vercel deployment'",
    "build:prod": "npm run build:web && npm run build:server",
    "build:prod:with-verify": "npm run build:web && npm run build:server && node scripts/verify-api-url.mjs",
    "build": "npm run build:prod",
    "preview": "vite preview",
    "preview:web": "vite preview",
    "vercel-build": "vite build",
    "start": "cross-env NODE_ENV=production node dist/server/server/index.js",
    "check": "npm run build:types && npm run check:client && npm run check:shared && npm run check:server",
    "check:client": "tsc -p tsconfig.client.json --noEmit",
    "check:shared": "tsc -p tsconfig.shared.json --noEmit",
    "check:server": "tsc -p tsconfig.server.json --noEmit",
    "build:types": "tsc -b tsconfig.shared.json",
    "bundle:report": "node scripts/size-report.mjs",
    "bundle:check": "node scripts/check-budgets.cjs",
    "ci:build": "cross-env CI=true npm run build && npm run bundle:check",
    "check:fast": "tsc --project tsconfig.fast.json",
    "check:incremental": "tsc --project tsconfig.fast.json --incremental --tsBuildInfoFile .tsbuildinfo",
    "check:watch": "tsc --project tsconfig.fast.json --watch --preserveWatchOutput",
    "lint:watch": "eslint . --max-warnings 0 --cache --cache-location node_modules/.cache/eslint --watch",
    "lint": "eslint . --max-warnings 0 --cache --cache-location node_modules/.cache/eslint",
    "lint:fix": "eslint . --fix --cache --cache-location node_modules/.cache/eslint",
    "secret:gen": "node -e \"console.log(require('crypto').randomBytes(32).toString('base64url'))\"",
    "security:audit": "npm audit --audit-level=high",
    "security:check": "node lib/security-utils.js --check",
    "security:scan": "npm run security:audit && npm run security:check",
    "security:validate": "npm run security:headers && npm run security:inputs && npm run security:audit",
    "security:headers": "tsx scripts/security/validate-headers.ts",
    "security:inputs": "tsx scripts/security/validate-inputs.ts",
    "security:console-logs": "tsx scripts/security/find-console-logs.ts",
    "security:fix-logs": "tsx scripts/security/replace-console-logs.ts",
    "security:monte-carlo": "tsx scripts/security/validate-monte-carlo.ts",
    "security:full": "npm run security:console-logs && npm run security:validate && npm run security:monte-carlo",
    "ai:validate": "tsx scripts/ai-validation-system.ts",
    "ai:orchestrate": "tsx scripts/ai-orchestration-patterns.ts",
    "ai:orchestrate:list": "tsx scripts/ai-orchestration-patterns.ts list",
    "ai:orchestrate:financial": "tsx scripts/ai-orchestration-patterns.ts execute financial_modeling",
    "ai:orchestrate:performance": "tsx scripts/ai-orchestration-patterns.ts execute performance_optimization",
    "ai:orchestrate:security": "tsx scripts/ai-orchestration-patterns.ts execute security_hardening",
    "ai:full": "npm run ai:validate && npm run ai:orchestrate:financial",
    "flags:lint": "node scripts/lint-flags.mjs",
    "flags:test-propagation": "node scripts/test-flag-propagation.mjs",
    "flags:demo": "node scripts/demo-flag-ui.mjs",
    "flags:demo:auto": "node scripts/demo-flag-ui.mjs --auto",
    "flags:test:hardening": "node scripts/test-hardened-flags.mjs",
    "flags:validate": "node scripts/validate-hardening.mjs",
    "fix:types": "npm run check && npm run lint:fix",
    "fix:all": "npm run fix:types && npm run test:quick",
    "measure:errors": "node scripts/measure-errors.mjs",
    "ci:triage": "node scripts/ci-triage.mjs",
    "preflight:phase0": "npm run check && npm run lint && npm test",
    "perf:guard": "node scripts/performance-guard.mjs",
    "db:push": "drizzle-kit push",
    "db:migrate": "drizzle-kit migrate",
    "db:studio": "drizzle-kit studio",
    "schema:generate": "tsx scripts/schema-validation.ts generate",
    "schema:check": "tsx scripts/schema-validation.ts check",
    "schema:test": "tsx scripts/schema-validation.ts test-rollback",
    "orchestrator": "tsx scripts/orchestrate.ts",
    "workers:dev": "tsx --watch scripts/orchestrate.ts",
    "bench": "tsx scripts/bench-engine.ts",
    "bench:async": "node --experimental-json-modules ./scripts/bench-async.js",
    "bench:load": "vitest bench tests/load --reporter=verbose",
    "smart-fix": "node scripts/smart-fix.js",
    "test": "npm run test:unit && npm run test:integration",
    "test:unit": "cross-env TZ=UTC vitest run",
    "test:integration": "cross-env TZ=UTC vitest -c vitest.config.int.ts run",
    "test:unit:watch": "cross-env TZ=UTC vitest",
    "test:integration:watch": "cross-env TZ=UTC vitest -c vitest.config.int.ts",
    "test:e2e": "playwright test --project=core tests/e2e/fund-setup.spec.ts",
    "test:e2e:wizard": "playwright test --project=core tests/e2e/fund-setup-workflow.spec.ts",
    "test:e2e:all": "playwright test",
    "ci:e2e": "playwright test --project=core tests/e2e/fund-setup.spec.ts",
    "test:memory": "cross-env REDIS_URL=memory:// npm run test:unit",
    "test:demo": "cross-env DEMO_CI=1 vitest run --exclude='**/redis/**' --exclude='**/integration/**' --exclude='**/api/**'",
    "ci:demo": "npm run test:demo",
    "verify:no-redis": "tsx scripts/verify-no-redis.ts",
    "debug:redis": "tsx scripts/redis/health.ts",
    "deploy:staging": "echo \"Triggering staging deploy via GitHub Actions (see .github/workflows/deploy-staging.yml)\"",
    "metrics:local": "cross-env ENABLE_METRICS=1 tsx server/observability/metrics-demo.ts",
    "test:smart": "node scripts/test-smart.mjs",
    "test:affected": "node scripts/test-smart.mjs --only-affected",
    "test:affected:fast": "npm run test:affected -- --bail --reporter=dot",
    "test:affected:verbose": "npm run test:affected -- --reporter=verbose --coverage",
    "ci:smart": "npm run test:affected && npm run lint:affected",
    "test:intelligent": "node scripts/smart-test-runner.mjs",
    "test:intelligent:fast": "node scripts/smart-test-runner.mjs --fail-fast",
    "test:intelligent:changed": "node scripts/smart-test-runner.mjs --only-changed",
    "test:intelligent:failed": "node scripts/smart-test-runner.mjs --only-failed",
    "test:repair": "tsx scripts/automated-test-repair.ts --run-tests",
    "test:optimize": "tsx scripts/intelligent-test-optimizer.ts",
    "test:emergency": "tsx scripts/emergency-test-fixes.ts",
    "test:super": "tsx scripts/super-smart-runner.ts",
    "test:super:emergency": "tsx scripts/super-smart-runner.ts --emergency",
    "test:super:performance": "tsx scripts/super-smart-runner.ts --performance",
    "lint:affected": "eslint $(node scripts/test-smart.mjs --files-only) --max-warnings 0",
    "test:watch": "vitest watch",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage",
    "test:quick": "vitest run --exclude='**/api/**'",
    "test:build-affected": "npm run test:smart && npm run build:affected",
    "backtest": "tsx scripts/backtest.ts",
    "test:smoke": "playwright test tests/smoke/wizard.spec.ts",
    "dev:debug": "cross-env VITE_WIZARD_DEBUG=1 npm run dev",
    "triage": "node scripts/collect-triage.mjs",
    "triage:auto": "playwright test tests/triage.spec.ts --project=chromium",
    "triage:analyze": "node scripts/triage-analyze.mjs",
    "triage:clean": "node -e \"require('fs').rmSync('triage-output', { recursive: true, force: true })\"",
    "diagnose": "node scripts/diagnose-wizard.mjs",
    "test:smoke:old": "vitest run client/src/core/reserves/adapter/__tests__/finalizePayload.spec.ts --reporter=dot",
    "test:integration:old": "cross-env DATABASE_URL=postgresql://postgres:postgres@localhost:5432/povc_test vitest run --config vitest.integration.config.ts",
    "test:e2e:smoke": "playwright test --project=smoke",
    "test:e2e:core": "playwright test --project=core",
    "test:e2e:extended": "playwright test --project=extended",
    "test:e2e:performance": "playwright test --project=performance",
    "test:e2e:accessibility": "playwright test --project=accessibility",
    "test:e2e:mobile": "playwright test --project=mobile",
    "test:e2e:cross-browser": "playwright test --project=firefox --project=webkit",
    "test:e2e:production": "playwright test --project=production",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:report": "playwright show-report",
    "test:all": "npm-run-all --parallel test:unit test:types test:lint && npm run test:smoke",
    "test:baseline": "k6 run -e BASE_URL=http://localhost:5000 -e RATE=5 -e DURATION=2m -e VUS=20 tests/k6/k6-baseline.js",
    "test:chaos": "vitest run tests/chaos",
    "test:chaos:pg": "vitest run tests/chaos/postgres-latency.test.ts",
    "test:chaos:wasm": "vitest run tests/chaos/wasm-fault.integration.test.ts",
    "test:security": "vitest run tests/security",
    "test:staging": "./scripts/smoke.sh",
    "chaos:start": "docker-compose -f docker-compose.chaos.yml up -d",
    "chaos:stop": "docker-compose -f docker-compose.chaos.yml down",
    "chaos:reset": "curl -X POST http://localhost:8474/reset",
    "chaos:break": "./tests/chaos/chaos.sh break",
    "chaos:heal": "./tests/chaos/chaos.sh heal",
    "playwright:install": "playwright install",
    "ai": "node scripts/ai-tools/index.js",
    "ai:metrics": "node scripts/ai-tools/metrics-server.js",
    "ai:type-safety": "node scripts/ai-tools/type-safety-agent.js",
    "ai:type-safety:dry": "node scripts/ai-tools/type-safety-agent.js --dry-run",
    "metrics:type-safety": "node scripts/type-safety-metrics.js",
    "generate:golden": "tsx scripts/generate-golden-fixture.ts",
    "api:types": "openapi-typescript server/openapi/api-spec.yaml -o shared/api-types.gen.ts",
    "api:lint": "redocly lint server/openapi/api-spec.yaml",
    "api:build": "npm run api:lint && npm run api:types",
    "prepare": "husky || true",
    "pre-push": "./scripts/validate-pr.sh",
    "pretest:smoke": "playwright install --with-deps",
    "test:smoke:e2e": "playwright test tests/e2e/basic-smoke.spec.ts",
    "test:types": "tsc --noEmit",
    "test:lint": "eslint . --max-warnings 0",
    "qa:checklist": "node scripts/qa-open.js",
    "dev:qa": "concurrently -k \"npm:dev\" \"sleep 3 && cross-env QA_BASE=http://localhost:5173 npm run qa:checklist\"",
    "deploy:gate": "node scripts/deploy-gate.mjs",
    "deploy:rollout": "node scripts/smart-rollout.mjs",
    "deploy:monitor": "node scripts/monitor-health.mjs",
    "deploy:prod": "npm run deploy:gate && npm run deploy:rollout && npm run deploy:monitor 30 0.5",
    "ga:checklist": "node scripts/ga-checklist.mjs",
    "ga:canary": "node scripts/canary-deploy.mjs",
    "ga:rollback": "node scripts/rollback.mjs",
    "ga:full": "npm run ga:checklist && npm run ga:canary",
    "bmad:status": "curl http://localhost:9091/stats",
    "bmad:metrics": "curl http://localhost:9091/metrics",
    "bmad:report": "node scripts/ai-tools/bmad-metrics.js --weekly",
    "dev:env": "node scripts/dev-env.mjs",
    "dev:docker": "docker-compose up -d && npm run dev",
    "dev:clean": "docker-compose down -v",
    "circuit-breaker": "tsx scripts/circuit-breaker-cli.ts",
    "pgcron:schedule": "psql \"$DATABASE_URL\" -f scripts/sql/schedule_pg_cron_cleanup.sql",
    "pgcron:unschedule": "psql \"$DATABASE_URL\" -f scripts/sql/unschedule_pg_cron_cleanup.sql",
    "pgcron:status": "psql \"$DATABASE_URL\" -c \"SELECT * FROM maintenance.audit_cleanup_status();\"",
    "audit:cleanup": "psql \"$DATABASE_URL\" -c \"CALL maintenance.cleanup_audit(NOW(), 1000, '10 milliseconds');\"",
    "lint:disable-warnings": "eslint . --ext .ts,.tsx,.js,.jsx --rule '@typescript-eslint/no-explicit-any: off' --rule '@typescript-eslint/no-unused-vars: off' --rule 'no-console: off' --rule 'react/no-unescaped-entities: off' --rule 'react-hooks/exhaustive-deps: off' --no-error-on-unmatched-pattern",
    "validate:architecture": "depcruise --include-only \"^(client|shared|server)\" --config .dependency-cruiser.cjs .",
    "validate:full": "npm run validate:architecture && npm run build && npm run test:unit && npm run check",
    "validate:fast": "npm run validate:architecture && npm run lint && npm run check:fast",
    "validate:phase1": "node scripts/validate-phase1.js",
    "validate:phase1:ps": "powershell -ExecutionPolicy Bypass -File scripts/validate-phase1.ps1",
    "test:main": "vitest run",
    "test:quarantine": "vitest -c vitest.config.quarantine.ts run",
    "test:ci": "vitest run"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix --max-warnings 0 --cache",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "dependencies": {
    "@hookform/resolvers": "^3.10.0",
    "@jridgewell/trace-mapping": "^0.3.25",
    "@neondatabase/serverless": "^0.10.4",
    "@nivo/line": "^0.99.0",
    "@nivo/scatterplot": "^0.99.0",
    "@notionhq/client": "^4.0.1",
    "@opentelemetry/auto-instrumentations-node": "^0.62.1",
    "@opentelemetry/exporter-metrics-otlp-http": "^0.203.0",
    "@opentelemetry/resources": "^2.0.1",
    "@opentelemetry/sdk-node": "^0.203.0",
    "@opentelemetry/semantic-conventions": "^1.36.0",
    "@radix-ui/react-accordion": "^1.2.4",
    "@radix-ui/react-alert-dialog": "^1.1.7",
    "@radix-ui/react-aspect-ratio": "^1.1.3",
    "@radix-ui/react-avatar": "^1.1.4",
    "@radix-ui/react-checkbox": "^1.1.5",
    "@radix-ui/react-collapsible": "^1.1.4",
    "@radix-ui/react-context-menu": "^2.2.7",
    "@radix-ui/react-dialog": "^1.1.7",
    "@radix-ui/react-dropdown-menu": "^2.1.7",
    "@radix-ui/react-hover-card": "^1.1.7",
    "@radix-ui/react-label": "^2.1.3",
    "@radix-ui/react-menubar": "^1.1.7",
    "@radix-ui/react-navigation-menu": "^1.2.6",
    "@radix-ui/react-popover": "^1.1.7",
    "@radix-ui/react-progress": "^1.1.3",
    "@radix-ui/react-radio-group": "^1.2.4",
    "@radix-ui/react-scroll-area": "^1.2.4",
    "@radix-ui/react-select": "^2.1.7",
    "@radix-ui/react-separator": "^1.1.3",
    "@radix-ui/react-slider": "^1.2.4",
    "@radix-ui/react-slot": "^1.2.0",
    "@radix-ui/react-switch": "^1.1.4",
    "@radix-ui/react-tabs": "^1.1.4",
    "@radix-ui/react-toast": "^1.2.7",
    "@radix-ui/react-toggle": "^1.1.3",
    "@radix-ui/react-toggle-group": "^1.1.3",
    "@radix-ui/react-tooltip": "^1.2.0",
    "@react-spring/web": "^10.0.1",
    "@sentry/react": "^10.6.0",
    "@slack/webhook": "^7.0.5",
    "@tanstack/react-query": "^5.60.5",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/papaparse": "^5.3.16",
    "@types/react-beautiful-dnd": "^13.1.8",
    "@types/swagger-ui-express": "^4.1.8",
    "@types/uuid": "^10.0.0",
    "@types/validator": "^13.15.3",
    "@use-gesture/react": "^10.3.1",
    "@vercel/node": "2.15.10",
    "@xstate/react": "^6.0.0",
    "body-parser": "^2.2.0",
    "bullmq": "^5.58.0",
    "chalk": "^5.6.2",
    "chart.js": "^4.5.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "compression": "^1.8.1",
    "connect-pg-simple": "^10.0.0",
    "cors": "^2.8.5",
    "csv-stringify": "^6.6.0",
    "date-fns": "^3.6.0",
    "dotenv": "^17.2.3",
    "drizzle-orm": "^0.39.3",
    "drizzle-zod": "^0.8.3",
    "embla-carousel-react": "^8.6.0",
    "express": "^4.21.2",
    "express-rate-limit": "^8.0.1",
    "express-session": "^1.18.1",
    "fast-deep-equal": "^3.1.3",
    "framer-motion": "^11.13.1",
    "helmet": "^8.1.0",
    "immer": "^10.1.1",
    "input-otp": "^1.4.2",
    "ioredis": "^5.7.0",
    "jsonwebtoken": "^9.0.2",
    "jwks-rsa": "^3.2.0",
    "lru-cache": "^11.1.0",
    "lucide-react": "^0.453.0",
    "memorystore": "^1.6.7",
    "mysql2": "^3.14.3",
    "nats": "2.16.0",
    "next-themes": "^0.4.6",
    "node-jose": "^2.2.0",
    "papaparse": "^5.5.3",
    "passport": "^0.7.0",
    "passport-local": "^1.0.0",
    "pino": "^9.9.0",
    "pino-http": "^10.5.0",
    "pino-pretty": "^13.1.1",
    "prom-client": "^15.1.3",
    "rate-limit-redis": "^4.2.2",
    "react": "^18.3.1",
    "react-beautiful-dnd": "^13.1.1",
    "react-chartjs-2": "^5.3.0",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.55.0",
    "react-icons": "^5.4.0",
    "react-resizable-panels": "^2.1.7",
    "react-router-dom": "^7.8.2",
    "recharts": "^3.1.2",
    "redis": "^4.7.1",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "tsconfig-paths": "^4.2.0",
    "tw-animate-css": "^1.2.5",
    "ulid": "^3.0.1",
    "uuid": "^11.1.0",
    "validator": "^13.15.15",
    "vaul": "^1.1.2",
    "web-vitals": "^5.1.0",
    "winston": "^3.17.0",
    "wouter": "^3.3.5",
    "ws": "^8.18.0",
    "xstate": "^5.22.1",
    "yaml": "^2.8.1",
    "zod": "^3.25.76",
    "zod-validation-error": "^3.4.0",
    "zustand": "^5.0.7"
  },
  "overrides": {
    "nats": "2.16.0",
    "esbuild": "^0.25.10",
    "path-to-regexp": "0.1.10"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@eslint/js": "^9.33.0",
    "@faker-js/faker": "^10.0.0",
    "@lhci/cli": "^0.15.1",
    "@playwright/test": "^1.54.2",
    "@preact/preset-vite": "^2.10.2",
    "@redocly/cli": "^2.0.7",
    "@replit/vite-plugin-cartographer": "^0.2.7",
    "@replit/vite-plugin-runtime-error-modal": "^0.0.3",
    "@tailwindcss/typography": "^0.5.15",
    "@tailwindcss/vite": "^4.1.3",
    "@testing-library/jest-dom": "^6.7.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/body-parser": "^1.19.6",
    "@types/compression": "^1.8.1",
    "@types/connect-pg-simple": "^7.0.3",
    "@types/cors": "^2.8.19",
    "@types/express": "^4.17.23",
    "@types/express-session": "^1.18.0",
    "@types/jest": "^30.0.0",
    "@types/node": "^20.16.11",
    "@types/node-fetch": "^2.6.13",
    "@types/passport": "^1.0.16",
    "@types/passport-local": "^1.0.38",
    "@types/pino": "^7.0.4",
    "@types/react": "^18.3.11",
    "@types/react-dom": "^18.3.1",
    "@types/supertest": "^6.0.3",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/testing-library__jest-dom": "^5.14.9",
    "@types/ws": "^8.18.1",
    "@types/xlsx": "^0.0.35",
    "@typescript-eslint/eslint-plugin": "^5.62.0",
    "@typescript-eslint/parser": "^5.62.0",
    "@typescript-eslint/utils": "^8.41.0",
    "@vitejs/plugin-react": "^4.7.0",
    "@vitest/ui": "^3.2.4",
    "autoprefixer": "^10.4.20",
    "axe-playwright": "^2.1.0",
    "concurrently": "^9.2.1",
    "cross-env": "^7.0.3",
    "dependency-cruiser": "^17.0.1",
    "drizzle-kit": "^0.31.5",
    "esbuild": "^0.25.10",
    "eslint": "^8.57.1",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-unused-imports": "^4.2.0",
    "fast-check": "^4.2.0",
    "get-port": "^7.1.0",
    "glob": "^11.0.3",
    "globals": "^16.3.0",
    "husky": "^9.1.7",
    "jest": "^30.0.5",
    "jsdom": "^26.1.0",
    "lint-staged": "^16.1.6",
    "npm-run-all": "^4.1.5",
    "open": "^10.2.0",
    "openapi-typescript": "^7.9.1",
    "playwright": "^1.54.2",
    "postcss": "^8.4.47",
    "preact": "^10.27.1",
    "prettier": "^3.6.2",
    "rimraf": "^6.0.1",
    "rollup-plugin-visualizer": "^6.0.3",
    "supertest": "^7.1.4",
    "tailwindcss": "^3.4.17",
    "terser": "^5.43.1",
    "tinybench": "^4.0.1",
    "ts-jest": "^29.4.0",
    "tsx": "^4.20.6",
    "typescript": "^5.9.3",
    "vite": "^5.4.20",
    "vite-plugin-virtual": "^0.4.0",
    "vite-tsconfig-paths": "^5.1.4",
    "vitest": "^3.2.4",
    "vitest-canvas-mock": "^0.3.3",
    "wait-on": "^8.0.4",
    "whatwg-fetch": "^3.6.20"
  },
  "optionalDependencies": {
    "bufferutil": "^4.0.8"
  }
}
