apiVersion: apps/v1
kind: Deployment
metadata:
  name: updog
  namespace: default
  labels:
    app: updog
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: updog
  template:
    metadata:
      labels:
        app: updog
        version: v1
    spec:
      # Grace period for shutdown
      terminationGracePeriodSeconds: 45
      
      containers:
      - name: updog
        image: updog:latest
        imagePullPolicy: Always
        
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "5000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: updog-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: updog-secrets
              key: redis-url
        - name: BUILD_SHA
          value: "{{ .Values.buildSha }}"
        
        # Resource limits
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        # Liveness probe - Is the container running?
        livenessProbe:
          httpGet:
            path: /livez
            port: http
            httpHeaders:
            - name: User-Agent
              value: Kubernetes-Liveness-Probe
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        # Readiness probe - Is the container ready to accept traffic?
        readinessProbe:
          httpGet:
            path: /readyz
            port: http
            httpHeaders:
            - name: User-Agent
              value: Kubernetes-Readiness-Probe
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        
        # Startup probe - For slow starting containers
        startupProbe:
          httpGet:
            path: /startupz
            port: http
            httpHeaders:
            - name: User-Agent
              value: Kubernetes-Startup-Probe
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 30  # 5 minutes max startup time
        
        # Lifecycle hooks
        lifecycle:
          preStop:
            exec:
              # Send SIGTERM and wait for graceful shutdown
              command: ["/bin/sh", "-c", "sleep 5"]
        
        # Security context
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        # Volume mounts
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: app-logs
          mountPath: /var/log/app
      
      # Volumes
      volumes:
      - name: tmp
        emptyDir: {}
      - name: app-logs
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: updog
  namespace: default
  labels:
    app: updog
spec:
  type: ClusterIP
  selector:
    app: updog
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
    name: http

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: updog
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: updog
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: updog
  namespace: default
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: updog

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: updog-config
  namespace: default
data:
  # Circuit breaker configuration
  CB_CACHE_ENABLED: "true"
  CB_CACHE_FAILURE_THRESHOLD: "5"
  CB_CACHE_RESET_TIMEOUT_MS: "30000"
  CB_HTTP_ENABLED: "true"
  CB_HTTP_FAILURE_THRESHOLD: "3"
  CB_HTTP_RESET_TIMEOUT_MS: "60000"
  CB_DB_ENABLED: "false"
  
  # Rate limiting
  RATE_LIMIT_ENABLED: "true"
  RATE_LIMIT_WINDOW_MS: "60000"
  RATE_LIMIT_MAX: "60"
  
  # Health check configuration
  HEALTH_CHECK_TIMEOUT_MS: "5000"
  SHUTDOWN_TIMEOUT_MS: "30000"