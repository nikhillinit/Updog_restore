#!/bin/bash
set -euo pipefail

# Enhanced migration helper with safety checks and progress tracking
BRANCH_NAME=$1
shift
FILES=("$@")

# Color codes for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# Validate inputs
if [[ -z "$BRANCH_NAME" ]] || [[ ${#FILES[@]} -eq 0 ]]; then
    echo -e "${RED}Usage: $0 <branch-name> <file1> [file2...]${NC}"
    exit 1
fi

# Check for uncommitted changes
if ! git diff-index --quiet HEAD --; then
    echo -e "${YELLOW}‚ö†Ô∏è  Stashing uncommitted changes...${NC}"
    git stash push -m "async-migrate: auto-stash $(date +%s)"
fi

# Create branch with conflict detection
if ! git checkout -b "$BRANCH_NAME" 2>/dev/null; then
    echo -e "${YELLOW}Branch exists. Switching...${NC}"
    git checkout "$BRANCH_NAME"
fi

# Smart marker file handling
[[ ! -f .async-migration-active ]] && {
    touch .async-migration-active
    echo -e "${GREEN}‚úì Migration marker created${NC}"
}

# Validate files exist before adding
VALID_FILES=()
for file in "${FILES[@]}"; do
    if [[ -f "$file" ]]; then
        VALID_FILES+=("$file")
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Skipping non-existent: $file${NC}"
    fi
done

if [[ ${#VALID_FILES[@]} -eq 0 ]]; then
    echo -e "${RED}‚ùå No valid files to migrate${NC}"
    exit 1
fi

# Add files with progress indicator
echo -e "${GREEN}Adding ${#VALID_FILES[@]} files...${NC}"
git add "${VALID_FILES[@]}" .async-migration-active

# Generate smart commit message with file count and names
COMMIT_MSG="refactor(async): migrate ${#VALID_FILES[@]} files [bench]

Files migrated:
$(printf -- '- %s\n' "${VALID_FILES[@]}")"

git commit -m "$COMMIT_MSG"

# Push with retry on network failure
echo -e "${GREEN}Pushing to remote...${NC}"
for i in {1..3}; do
    if git push -u origin HEAD; then
        break
    fi
    echo -e "${YELLOW}Push attempt $i failed, retrying...${NC}"
    sleep 2
done

# Create PR with enhanced template and labels
echo -e "${GREEN}Creating PR...${NC}"
PR_URL=$(gh pr create \
    --title "refactor(async): ${BRANCH_NAME##*/} migration (${#VALID_FILES[@]} files)" \
    --body "## üîÑ Async Migration

### Files Updated (${#VALID_FILES[@]}):
$(printf -- '- [ ] %s\n' "${VALID_FILES[@]}")

### Automated Checks:
- [ ] Guardian benchmark passing
- [ ] Stress test P95 < 400ms
- [ ] No circuit breaker trips

---
*Generated by async-migrate.sh*" \
    --label async-hotpath \
    --label automated)

echo -e "${GREEN}‚úÖ Migration PR created: $PR_URL${NC}"
echo -e "${YELLOW}Guardian will auto-run. Check back in ~8 minutes.${NC}"

# Optional: Open PR in browser
if command -v open &> /dev/null; then
    open "$PR_URL"
fi
