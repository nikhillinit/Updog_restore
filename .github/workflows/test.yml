name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

# Prevent concurrent runs on same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests with coverage
      run: npm run test:coverage
    
    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v4
      with:
        name: coverage-${{ matrix.os }}-${{ matrix.node-version }}
        path: coverage/
        retention-days: 14
    
    - name: Run build
      run: npm run build --if-present

  # Parallel linting job for faster CI
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint

  # Experimental features gated behind feature flag
  experimental:
    runs-on: ubuntu-latest
    if: vars.CI_EXPERIMENTAL == 'true'
    needs: test
    env:
      CI_EXPERIMENTAL: false
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Generate ETag artifacts
      run: |
        echo "etag-$(date +%s)" > etag.txt
        echo "Generated ETag: $(cat etag.txt)"
    
    - name: Upload ETag artifact
      uses: actions/upload-artifact@v4
      with:
        name: etag-${{ github.sha }}
        path: etag.txt
        retention-days: 7
