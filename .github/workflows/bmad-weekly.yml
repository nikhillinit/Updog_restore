name: BMAD Weekly Report

on:
  schedule:
    # Every Monday at 1 PM UTC (9 AM EST / 6 AM PST)
    - cron: '0 13 * * MON'
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (no notifications)'
        type: boolean
        default: false

jobs:
  weekly-report:
    name: Generate Weekly BMAD Report
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af
        with:
          node-version: '20.19.0'
          cache: 'npm'

      - run: npm ci

      - name: Fetch BMAD metrics from artifacts
        run: |
          # Create .bmad directory
          mkdir -p .bmad

          # Fetch recent workflow runs and download artifacts
          gh run list --workflow=ci-gate.yml --limit=50 --json databaseId,status,conclusion,createdAt \
            | jq -r '.[] | select(.conclusion == "success") | .databaseId' \
            | head -20 \
            | while read run_id; do
              echo "Fetching artifacts from run $run_id..."
              gh run download "$run_id" --name bmad-metrics --dir ".bmad/run-$run_id" 2>/dev/null || true
            done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate weekly report
        id: report
        run: |
          node scripts/bmad-weekly-report.mjs > bmad-report.md

          # Extract summary for Slack
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          head -20 bmad-report.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload report as artifact
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882
        with:
          name: bmad-weekly-report-${{ github.run_id }}
          path: bmad-report.md
          retention-days: 90

      - name: Add to job summary
        run: |
          echo "## ðŸ“Š BMAD Weekly Report" >> $GITHUB_STEP_SUMMARY
          cat bmad-report.md >> $GITHUB_STEP_SUMMARY

      - name: Send Slack notification
        if: github.event.inputs.dry_run != 'true' && secrets.SLACK_WEBHOOK_URL
        run: |
          curl -X POST ${{ secrets.SLACK_WEBHOOK_URL }} \
            -H 'Content-Type: application/json' \
            -d @- << EOF
          {
            "text": "ðŸ“Š BMAD Weekly Report",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "${{ steps.report.outputs.summary }}"
                }
              },
              {
                "type": "actions",
                "elements": [
                  {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "View Full Report"
                    },
                    "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                ]
              }
            ]
          }
          EOF

      - name: Create Grafana annotation
        if: secrets.GRAFANA_API_URL && secrets.GRAFANA_API_KEY
        run: |
          # Get metrics from report
          REPAIRS=$(grep "Repairs Successful:" bmad-report.md | grep -oE '[0-9]+' | head -1 || echo "0")
          TIME_SAVED=$(grep "Time Saved:" bmad-report.md | grep -oE '[0-9]+' | head -1 || echo "0")

          curl -X POST "${{ secrets.GRAFANA_API_URL }}/api/annotations" \
            -H "Authorization: Bearer ${{ secrets.GRAFANA_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d @- << EOF
          {
            "dashboardUID": "bmad-roi",
            "time": $(date +%s)000,
            "timeEnd": $(date +%s)000,
            "tags": ["bmad", "weekly-report"],
            "text": "Weekly Report: $REPAIRS repairs, ~$TIME_SAVED hours saved"
          }
          EOF
