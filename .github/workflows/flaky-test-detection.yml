name: Flaky Test Detection

on:
  schedule:
    - cron: '0 3 * * *'  # Daily at 3 AM UTC
  workflow_dispatch:

concurrency:
  group: flaky-detection-${{ github.ref }}
  cancel-in-progress: false  # Let nightly runs complete

jobs:
  detect-flakies:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    strategy:
      matrix:
        # Run tests multiple times to catch flakiness
        iteration: [1, 2, 3]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests without retry (iteration ${{ matrix.iteration }})
        run: npm run test:ci
        env:
          # Force no retries to surface flakiness
          CI_NO_RETRY: true
          VITEST_REPORTER: json
          VITEST_OUTPUT_FILE: test-results-${{ matrix.iteration }}.json
        continue-on-error: true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.iteration }}
          path: test-results-${{ matrix.iteration }}.json

  analyze-flakiness:
    needs: detect-flakies
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          pattern: test-results-*
          merge-multiple: true

      - name: Analyze flaky tests
        run: |
          echo "## Flaky Test Analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Simple analysis - find tests that failed in some runs but not others
          for file in test-results-*.json; do
            if [ -f "$file" ]; then
              echo "Processing $file"
              # Add basic flaky test detection logic here
              # This would need to be enhanced based on Vitest output format
            fi
          done
          
          echo "Flaky test analysis complete. Check artifacts for detailed results." >> $GITHUB_STEP_SUMMARY