name: Quarantine Test Check

on:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  workflow_dispatch:

jobs:
  check-quarantine:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.16.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run quarantined tests
        id: quarantine
        run: |
          echo "### 🔬 Quarantine Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if npm run test:quarantine; then
            echo "✅ **All quarantined tests passed!**" >> $GITHUB_STEP_SUMMARY
            echo "Consider promoting stable tests back to main suite." >> $GITHUB_STEP_SUMMARY
            echo "status=passed" >> $GITHUB_OUTPUT
          else
            echo "❌ **Some quarantined tests are still failing**" >> $GITHUB_STEP_SUMMARY
            echo "status=failed" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      - name: Create issue if tests are ready for promotion
        if: steps.quarantine.outputs.status == 'passed'
        uses: actions/github-script@v7
        with:
          script: |
            const title = '🎉 Quarantined tests ready for promotion';
            const body = `The quarantined tests have been passing consistently.
            
            **Action Required:**
            - Review the quarantined tests
            - Move stable tests back to main suite
            - Update test documentation
            
            See the [workflow run](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}) for details.`;
            
            // Check if issue already exists
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'test-quarantine'
            });
            
            if (issues.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title,
                body,
                labels: ['test-quarantine', 'good first issue']
              });
            }