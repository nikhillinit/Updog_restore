name: CI
on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
      - name: Install
        id: install
        run: npm ci --prefer-offline --no-audit
      - name: Smoke (reserves + store)
        id: smoke
        run: |
          npx vitest run client/src/core/reserves --reporter=dot --run
          npx vitest run client/src/stores/useFundStore --reporter=dot --run

  test:
    runs-on: ubuntu-latest
    needs: smoke
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
      - name: Install
        run: npm ci --prefer-offline --no-audit
      - name: Type-check
        id: typecheck
        run: npm run type-check
      - name: Unit (coverage)
        id: unit
        run: npm run test:coverage
      - name: Build
        id: build
        run: npm run build

  e2e:
    runs-on: ubuntu-latest
    # label-gated to keep PRs snappy
    if: contains(toJson(github.event.pull_request.labels), 'e2e')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
      - run: npm ci --prefer-offline --no-audit
      - run: npx playwright install --with-deps
      - name: Playwright migration E2E
        id: e2e
        run: E2E_WIZARD=1 npx playwright test tests/e2e/localstorage-migration.spec.ts

  comment:
    runs-on: ubuntu-latest
    needs: [smoke, test]
    if: always()
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const head = context.payload.pull_request;
            const status = "${{ needs.test.result }}";
            const emoji = status === "success" ? "✅" : (status === "failure" ? "❌" : "⚠️");
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: head.number,
              body: `${emoji} **CI Summary**\n- Smoke: ${{ needs.smoke.result }}\n- Test: ${{ needs.test.result }}`
            });
