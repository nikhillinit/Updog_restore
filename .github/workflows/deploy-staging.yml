name: Deploy (staging)

on:
  push:
    branches: [main]
  workflow_dispatch: {}

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Setup Node
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af
        with:
          node-version: '22.16.0'
          cache: 'npm'
      - name: Install
        run: npm ci --legacy-peer-deps
      - name: Build
        run: npm run build --if-present

      # ===== GCP Auth =====
      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT }}

      - name: Configure Docker auth
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Build & Push Container
        env:
          IMAGE: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/fund-calc/fund-calc:${{ github.sha }}
        run: |
          docker build -t "$IMAGE" .
          docker push "$IMAGE"

      - name: Deploy to Cloud Run (staging)
        env:
          IMAGE: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/fund-calc/fund-calc:${{ github.sha }}
        run: |
          gcloud run deploy ${{ secrets.GCP_SERVICE_NAME }} \
            --image "$IMAGE" \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --set-env-vars NODE_ENV=staging,ENABLE_METRICS=1,REDIS_URL=${{ secrets.STAGING_REDIS_URL }} \
            --update-secrets METRICS_KEY=metrics-key:latest,HEALTH_KEY=health-key:latest

      - name: Verify staging deployment
        run: |
          # Warm-up period
          sleep 15

          # Liveness check
          curl -fsSL ${{ secrets.STAGING_URL }}/healthz

          # Metrics with auth (first 5 lines to verify it works)
          curl -fsSL -H "Authorization: Bearer ${{ secrets.METRICS_KEY }}" \
            ${{ secrets.STAGING_URL }}/metrics | head -n 5

          echo "Staging deployment looks healthy."
