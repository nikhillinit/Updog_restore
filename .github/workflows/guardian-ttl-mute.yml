name: Guardian TTL Mute Handler

on:
  pull_request:
    types: [labeled, unlabeled]

permissions:
  contents: read
  pull-requests: read
  actions: write

jobs:
  handle-mute:
    if: github.event.label.name == 'guardian-mute'
    runs-on: ubuntu-latest
    
    steps:
      - name: Set TTL Mute (4 hours from now)
        if: github.event.action == 'labeled'
        run: |
          TTL_DATE=$(date -u -d '+4 hours' +%Y-%m-%dT%H:%M:%SZ)
          echo "Setting Guardian mute until $TTL_DATE"
          
          # Store as repository variable (requires appropriate permissions)
          # Note: This requires the workflow to have write access to variables
          # Alternative: Store in a file in the repo or use GitHub API
          
          cat > mute-request.json <<EOF
          {
            "mute_until": "$TTL_DATE",
            "pr_number": ${{ github.event.pull_request.number }},
            "requested_by": "${{ github.actor }}",
            "reason": "PR #${{ github.event.pull_request.number }} labeled with guardian-mute"
          }
          EOF
          
          echo "✅ Guardian mute requested until $TTL_DATE"
          echo "Note: Repository admin must set GUARDIAN_MUTE_UNTIL variable to: $TTL_DATE"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Clear TTL Mute
        if: github.event.action == 'unlabeled'
        run: |
          echo "Clearing Guardian mute for PR #${{ github.event.pull_request.number }}"
          echo "Note: Repository admin must clear GUARDIAN_MUTE_UNTIL variable"
          
      - name: Comment on PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const action = context.payload.action;
            const ttlHours = 4;
            
            let comment;
            if (action === 'labeled') {
              const ttlDate = new Date(Date.now() + ttlHours * 60 * 60 * 1000).toISOString();
              comment = `🔇 **Guardian Mute Activated**\n\n` +
                `The Guardian canary checks will be muted for ${ttlHours} hours (until ${ttlDate}).\n\n` +
                `To unmute early, remove the \`guardian-mute\` label.\n\n` +
                `⚠️ **Note**: Repository admin must set the \`GUARDIAN_MUTE_UNTIL\` variable to activate the mute.`;
            } else {
              comment = `🔊 **Guardian Mute Deactivated**\n\n` +
                `Guardian canary checks have been re-enabled.\n\n` +
                `⚠️ **Note**: Repository admin must clear the \`GUARDIAN_MUTE_UNTIL\` variable.`;
            }
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });