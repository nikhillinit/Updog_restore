name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Test environment'
        required: true
        default: 'local'
        type: choice
        options:
        - local
        - preview
        - production
      test_suite:
        description: 'Test suite to run'
        required: true
        default: 'smoke'
        type: choice
        options:
        - smoke
        - core
        - extended
        - all

jobs:
  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright
        run: npx playwright install --with-deps chromium
        
      - name: Run smoke tests
        run: npm run test:e2e:smoke
        env:
          CI: true
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 7

  core-tests:
    name: Core E2E Tests
    runs-on: ubuntu-latest
    needs: smoke-tests
    timeout-minutes: 45
    if: github.event.inputs.test_suite == 'core' || github.event.inputs.test_suite == 'all' || github.event_name != 'workflow_dispatch'
    
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox]
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright
        run: npx playwright install --with-deps ${{ matrix.browser }}
        
      - name: Run core tests
        run: npm run test:e2e:core -- --project=${{ matrix.browser }}
        env:
          CI: true
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: core-test-results-${{ matrix.browser }}
          path: |
            test-results/
            playwright-report/
          retention-days: 7

  extended-tests:
    name: Extended E2E Tests
    runs-on: ubuntu-latest
    needs: core-tests
    timeout-minutes: 60
    if: github.event.inputs.test_suite == 'extended' || github.event.inputs.test_suite == 'all'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright
        run: npx playwright install --with-deps chromium
        
      - name: Run extended tests
        run: npm run test:e2e:extended
        env:
          CI: true
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: extended-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 7

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: smoke-tests
    timeout-minutes: 30
    if: github.event.inputs.test_suite == 'all' || github.event_name == 'schedule'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright
        run: npx playwright install --with-deps chromium
        
      - name: Setup k6
        run: |
          sudo gpg -k
          sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6
          
      - name: Run performance tests
        run: |
          npm run test:e2e:performance
          k6 run tests/performance/k6-load-test.js
        env:
          CI: true
          BASE_URL: http://localhost:5000
          
      - name: Upload performance results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: performance-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    needs: smoke-tests
    timeout-minutes: 30
    if: github.event.inputs.test_suite == 'all' || github.event_name == 'schedule'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright
        run: npx playwright install --with-deps chromium
        
      - name: Run accessibility tests
        run: npm run test:e2e:accessibility
        env:
          CI: true
          
      - name: Upload accessibility results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  mobile-tests:
    name: Mobile E2E Tests
    runs-on: ubuntu-latest
    needs: core-tests
    timeout-minutes: 45
    if: github.event.inputs.test_suite == 'all'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright
        run: npx playwright install --with-deps chromium
        
      - name: Run mobile tests
        run: npm run test:e2e:mobile
        env:
          CI: true
          
      - name: Upload mobile test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mobile-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 7

  production-tests:
    name: Production Smoke Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: github.event.inputs.environment == 'production' || github.event_name == 'schedule'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright
        run: npx playwright install --with-deps chromium
        
      - name: Run production tests
        run: npm run test:e2e:production
        env:
          CI: true
          PROD_URL: https://updog-restore.vercel.app
          BASE_URL: https://updog-restore.vercel.app
          
      - name: Upload production test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: production-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  report:
    name: Test Report
    runs-on: ubuntu-latest
    needs: [smoke-tests, core-tests]
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-results
          
      - name: Publish Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: E2E Test Results
          path: 'all-results/**/junit.xml'
          reporter: java-junit
          
      - name: Upload combined results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: combined-test-results
          path: all-results/
          retention-days: 30