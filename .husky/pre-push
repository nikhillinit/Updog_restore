#!/usr/bin/env bash
set -euo pipefail

echo "üîç Checking changed files against origin/main..."

# Ensure origin/main is up to date for accurate comparison
git fetch origin main 2>/dev/null || true
BASE_BRANCH="origin/main"

# Get changed files since the common ancestor
CHANGED=$(git diff --name-only $BASE_BRANCH...HEAD || echo "")

if [ -z "$CHANGED" ]; then
  echo "‚úÖ No changes detected, skipping tests"
  exit 0
fi

# Define patterns for files that do NOT impact tests (Docs, certain configs)
NON_TEST_IMPACTING_PATTERN='^(docs/|\.md$|\.ya?ml$|\.toml$|\.gitignore$|CLAUDE\.md$)'

# Check if ALL changed files match the exclusion patterns
# We use double negation: check if any file does NOT match the pattern. If none are found, we skip tests.
if ! echo "$CHANGED" | grep -v -E "$NON_TEST_IMPACTING_PATTERN" | grep -q '.'; then
    echo "‚úÖ Docs/config-only changes; skipping tests"
    exit 0
fi

# Define patterns for files that require a full test run (Core configs, packages)
FULL_RUN_PATTERN='(vitest\.config\.ts|vite\.config\.ts|tsconfig\.json|package\.json|package-lock\.json)'

# TypeScript baseline check (always run if code changed)
echo "üìã Checking TypeScript baseline..."
npm run baseline:check || {
  echo ""
  echo "‚ùå NEW TypeScript errors detected"
  echo ""
  echo "If you FIXED errors:"
  echo "   npm run baseline:save && git add .tsc-baseline.json && git commit --amend --no-edit"
  echo ""
  echo "If you INTRODUCED errors:"
  echo "   Fix them or see: npm run baseline:progress"
  exit 1
}

# If core configuration files changed, run the full test suite
if echo "$CHANGED" | grep -qE "$FULL_RUN_PATTERN"; then
  echo "‚ö†Ô∏è  Core configuration changed, running full validation..."

  # Build verification
  echo "üèóÔ∏è  Building..."
  npm run build || exit 1

  # Full test suite
  echo "üß™ Running full test suite..."
  npm test
  exit $?
fi

# Otherwise, run only affected tests (smart mode)
echo "üß™ Running targeted tests for changed files..."
# Using --changed for intelligent test selection
npm test -- --changed HEAD~1
exit $?
