#!/usr/bin/env bash

# Enhanced Pre-Commit Hook with Quality Gates
# Runs: lint-staged (ESLint auto-fix + format), TypeScript type check, quality metrics

set -e

echo "🔍 Running pre-commit quality gates..."

# 1. Run Gitleaks to prevent secret leaks
echo "  → Scanning for secrets..."
npx gitleaks protect --staged --verbose || {
  echo "❌ Gitleaks detected potential secrets in staged files"
  echo "💡 Remove sensitive data before committing"
  exit 1
}

# 2. Run lint-staged (ESLint auto-fix + Prettier)
echo "  → Auto-fixing linting issues..."
npx lint-staged

# 3. Incremental TypeScript type check on staged files
echo "  → Type checking staged files..."
npm run check:incremental || {
  echo "❌ TypeScript type errors detected"
  echo "💡 Tip: Run 'npm run check' to see all errors"
  echo "💡 Tip: Run 'npm run fix:typescript' for automated fixes"
  exit 1
}

# 4. Count 'any' types in staged files
STAGED_TS_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(ts|tsx)$' || true)
if [ -n "$STAGED_TS_FILES" ]; then
  ANY_COUNT=$(echo "$STAGED_TS_FILES" | xargs grep -c ": any\b" 2>/dev/null | awk -F: '{sum+=$2} END {print sum}' || echo "0")
  if [ "$ANY_COUNT" -gt 0 ]; then
    echo "⚠️  Warning: Found $ANY_COUNT 'any' types in staged files"
    echo "💡 Consider replacing with proper types or 'unknown'"
  fi
fi

# 5. Check for eslint-disable comments in staged files
if [ -n "$STAGED_TS_FILES" ]; then
  DISABLE_COUNT=$(echo "$STAGED_TS_FILES" | xargs grep -c "eslint-disable" 2>/dev/null | awk -F: '{sum+=$2} END {print sum}' || echo "0")
  if [ "$DISABLE_COUNT" -gt 0 ]; then
    echo "⚠️  Warning: Found $DISABLE_COUNT 'eslint-disable' comments in staged files"
    echo "💡 Consider fixing the issues instead of disabling rules"
  fi
fi

echo "✅ Pre-commit checks passed!"